name: Deploy Mandrill Webhooks Lambda

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment:'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - test
          - prod

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'oracle'

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-1

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven

      - name: Build postgresql-connection-layer module with Maven
        run: |
          cd ${GITHUB_WORKSPACE}/postgresql-connection-layer
          mvn clean install

      - name: Build mandrill-webhooks Lambda Function with Maven
        run: |
          cd ${GITHUB_WORKSPACE}/MandrillWebhooksFunction
          mvn clean install

      - name: Package mandrill-webhooks Lambda Function
        run: |
          cd ${GITHUB_WORKSPACE}/MandrillWebhooksFunction
          mvn package
          cd target
          cp MandrillWebhooksFunction-1.0.jar ${GITHUB_WORKSPACE}/MandrillWebhooksFunction/MandrillWebhooksFunction-1.0.jar

      - name: Set environment variable to disable telemetry
        run: echo 'SAM_CLI_TELEMETRY=0' >> $GITHUB_ENV

      - name: Deploy mandrill-webhooks Lambda Function
        run: |
          # cd ${GITHUB_WORKSPACE}/MandrillWebhooksFunction
          # ls -a
          if [ "${{ github.event.inputs.environment }}" == "dev" ]; then
             sam deploy --stack-name mandrill-webhooks-dev --capabilities CAPABILITY_IAM --parameter-overrides Stage=dev --no-confirm-changeset
          elif [ "${{ github.event.inputs.environment }}" == "test" ]; then
            sam deploy --stack-name mandrill-webhooks-test --capabilities CAPABILITY_IAM --parameter-overrides Stage=test --no-confirm-changeset
          elif [ "${{ github.event.inputs.environment }}" == "prod" ]; then
            sam deploy --stack-name mandrill-webhooks-prod --capabilities CAPABILITY_IAM --parameter-overrides Stage=prod --no-confirm-changeset
          fi

      - name: Notify Slack for Non Prod Deployment
        uses: ./.github/actions/notify-slack
        with:
          success-channel: non_prod_deployment
          failure-channel: non_prod_deployment
          project-name: 'Mandrill Webhooks Lambda'

      - name: Notify Slack for Release Deployment
        uses: ./.github/actions/notify-slack
        with:
          success-channel: release
          failure-channel: release
          project-name: 'Mandrill Webhooks Lambda'